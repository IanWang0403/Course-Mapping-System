COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. The course introduces the fundamental concepts of procedural programming. Topics include algorithms and problem solving, data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing.",None,None
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. The course introduces the fundamental concepts of procedural programming. Topics include algorithms and problem solving, data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing.",None,None
COMP SCI 1102,Object Oriented Programming,"This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm. The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, event-driven programming, memory management and an introduction to software engineering issues.","COMP SCI 1101, COMP SCI 1201, ENG 1002, MECH ENG 1100, MECH ENG 1101, MECH ENG 1102, MECH ENG 1103, MECH ENG 1104 or MECH ENG 1105; SACE Stage 1 Mathematics or equivalent",None
COMP SCI 1102,Object Oriented Programming,"This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm. The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, event-driven programming, memory management and an introduction to software engineering issues.","COMP SCI 1101, COMP SCI 1201, ENG 1002, MECH ENG 1100, MECH ENG 1101, MECH ENG 1102, MECH ENG 1103, MECH ENG 1104 or MECH ENG 1105; SACE Stage 1 Mathematics or equivalent",None
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.","COMP SCI 1101, ENG 1002 or ENG 1003",None
COMP SCI 1106,Introduction to Software Engineering,"This course provides a general introduction to software engineering. It introduces concepts such as software processes and agile methods, and essential software development activities, from initial specification through to system maintenance. Formalisms and tools to assist in software development are also presented, including common design patterns and UML notation. There is a focus on software testing, from unit testing to the testing of software releases. Project management and professional software engineering practice will also be covered. Case studies provide practical examples for many of these concepts.",None,None
COMP SCI 2000,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2000,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,COMP SCI 1104
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,COMP SCI 1104
COMP SCI 2103,Algorithm Design & Data Structures,"The course is structured to take students from an introductory knowledge of C++ to a higher level, as well as addressing some key areas of computer programming and algorithm design. Topics include: abstract data types, class hierarchies, inheritance, friends, polymorphism and type systems; OO design principles, testing and software reuse; algorithmic strategies and introductory complexity analysis; recursion, linked lists, stacks, queues and trees.",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 2103,Algorithm Design & Data Structures,"The course is structured to take students from an introductory knowledge of C++ to a higher level, as well as addressing some key areas of computer programming and algorithm design. Topics include: abstract data types, class hierarchies, inheritance, friends, polymorphism and type systems; OO design principles, testing and software reuse; algorithmic strategies and introductory complexity analysis; recursion, linked lists, stacks, queues and trees.",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2202,Foundations of Computer Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 2202,Foundations of Computer Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 2205,Software Engineering Workshop I,"This course provides software engineering students with the fundamental knowledge and practical understanding of methods, approaches, and tools for requirements engineering in different software paradigms. Topics include: deriving and reasoning about the appropriate description of a desired system, modelling and analysis knowledge and skills, documenting and evaluating requirements, and conceptual design.  The course will also focus on team work and communication skills, requirements prioritisation and negotiation, and automated software engineering tools relevant to requirement and modelling phases of software engineering.
The course will be delivered in seminar or workshop styles and a large number of assessment tasks will be project based in order to give the students skills and experience of working in a team environment.",COMP SCI 1106 or COMP SCI 2006,None
COMP SCI 2206,Software Engineering Workshop II,"This course teaches methods, approaches, and tools for systematically designing and analysing software. There is a focus on approaches for both high-level and low-level software design. The course will also cover topics related to measuring design attributes and design quality evaluation. The course particularly focuses on creativity in software design and sketching for early design concept, including topics such as co-evolution of requirements and design, design fictions, and personas.
The course will be delivered in seminar or workshop style and a large number of assessment tasks will be project based in order to give the students skills and experience of coming up with divergent and unique solutions to problems while working in teams on software design projects.",COMP SCI 1106 or COMP SCI 2006,COMP SCI 2205
COMP SCI 2207,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",None,None
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11),  Layer 2/3  protocols (MPLS); selected current topics such as: security,  multimedia protocols, quality of Service, mobility, wireless  networking, emerging protocols, network management.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. 
Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Operating System Security and Protection mechanisms:
protection domains, access lists, capability systems, principle of minimum privilege, security threats and attacks, encryption, and authentication",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",(COMP SCI 1106 or COMP SCI 2006) and COMP SCI 2201,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2201,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 and COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3303,Engineering Software as Services I,"The objectives of this course are to provide students with the knowledge and skills required for engineering Software as a Service, SaaS. Students will learn and use state of the art industry practices from the Agile software development paradigm such as Scrum, Behaviour Driven Development, Test Driven Development and Continuous Deployment, to build SaaS applications. The course will use technologies such as Ruby on Rails, GitHub, Cucumber and RSpec to aid development. This course will cover both the theoretical concepts and practical implementation details required to engineer SaaS in Cloud based web applications. There will be a strong focus on collaborative coding and team projects.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3304,Engineering Software as Services II,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering Software as a Service, SaaS, acquired by successfully completing Engineering Software as Services I. This course will put more emphasis on challenging project work that will require students to complete a semester-long, group-based, software engineering project that will implement and deploy a SaaS Cloud based web application to solve a practical business problem.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",None,COMP SCI 3303
COMP SCI 3305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 3307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3308,Cybersecurity Fundamentals,"In this course, students will be introduced to real-world cybersecurity challenges that organisations face, and learn to apply knowledge and skills gained through other Computer Science courses to address them. The challenges will be examined both from the attacker's perspective (how systems are exploited) and the defender's perspectives (how to secure systems or respond to threats).
Common attack and defence strategies for software, web applications, networks, operating systems, cryptographic systems and humans will be explored. The course will also introduce cyber security management concepts, including security operations, risk management, security engineering and security architecture, as well as provide guidance on different career paths specialising in cybersecurity. This course focuses on hand-on activities, and students are encouraged to participate in public and industry cybersecurity challenges, including capture-the-flag competitions.",COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3310,Software Engineering & Project (Artificial Intelligence),"Within the context of a software engineering project, this course covers the production of high quality software solutions to large tasks. Topics covered in this course will be provided prior to commencement in 2019.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3311,Software Engineering & Project (Data Science),"Within the context of a software engineering project, this course covers the production of high quality software solutions to large tasks. Topics covered in this course will be provided prior to commencement in 2019.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3312,Software Engineering & Project (Cybersecurity),"Within the context of a software engineering project, this course covers the production of high quality software solutions to large tasks. Topics covered in this course will be provided prior to commencement in 2019.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3313,Software Engineering & Project (Distributed Systems & Networking),"Within the context of a software engineering project, this course covers the production of high quality software solutions to large tasks. Topics covered in this course will be provided prior to commencement in 2019.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, COMP SCI 2202 or COMP SCI 2202B"
COMP SCI 3314,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through 'learning'. For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 3315,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,COMP SCI 2201
COMP SCI 4000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,COMP SCI 2201
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 4015A in previous Semester
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 4015A in previous Semester
COMP SCI 4023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 2201
COMP SCI 4092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,COMP SCI 2201
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2207,COMP SCI 2201
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 1103,COMP SCI 2201
COMP SCI 4100,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,COMP SCI 2201
COMP SCI 4123,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 2201
COMP SCI 4192,Mobile and Wireless Systems Hons,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,COMP SCI 2201
COMP SCI 4194,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2207,COMP SCI 2201
COMP SCI 4195,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",None,COMP SCI 2201
COMP SCI 4405,Research Methods  in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,None
COMP SCI 4407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4408,Modelling and Analysis of Complex Systems,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 2201
COMP SCI 4409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 4411,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",COMP SCI 1106 or COMP SCI 2006,COMP SCI 2201
COMP SCI 4412,Secure Software Engineering,"This course will introduce the theoretical concepts and practical approaches and tools that support the security concerns in the whole systems development lifecycle resulting in software that is secure by default. The course will cover a wide range of software security topics ranging from as security as a cross-cutting concern, methodological approaches to improving software security during different phases of software development lifecycle, integrating secure software development principles and patterns into software development processes, contemporary paradigm of secure continuous software engineering, DevSecOps. The course will be offered in a workshop style mode with small and large parts of software development projects being the major types of assessment tasks.",None,COMP SCI 2201
COMP SCI 4413,Introduction to Quantum Computing,"It is still unknown whether quantum computers will ever be a reality.
If such machines are possible, they will fundamentally change how we perform calculations, and the implications on many applications (including communications and computer security) will be tremendous.
Leaving the issue of feasibility aside, it is interesting nonetheless to study how to do computing using a quantum computer. This course aims to provide a first introduction to quantum computing. We will highlight the paradigm change between conventional computing and quantum computing, and introduce several basic quantum algorithms. If time permits, we will also discuss the implications of quantum computing on fields such as computer security and machine learning.","Linear Algebra, Alg Data Structure Analysis",COMP SCI 2201
COMP SCI 4414A,Software Engineering Research Project A,"The research project is aimed at providing students with an opportunity to apply Software Engineering knowledge, understanding, and skills to an industrially sourced project. The projects are jointlysupervised by academic supervisors and the external clients, who propose projects. The students are assigned to different small teams that are expected to work collaboratively on the assigned project that will involve aspects of research and development. Students are expected to demonstrate the application of software engineering principles and
practices by following defined processes, which are tracked using online
repositories and communication tools. The project also provides a pathway to enrolment in a higher degree by research.",None,None
COMP SCI 4414B,Software Engineering Research Project  B,"The final year research project is aimed at providing students with an opportunity to apply Software Engineering knowledge, understanding, and skills to an industrially sourced project. The projects are jointlysupervised by academic supervisors and the external clients, who propose projects. The students are assigned to different small teams that are expected to work collaboratively on the assigned project that will involve aspects of research and development. Students are expected to demonstrate the application of software engineering principles and
practices by following defined processes, which are tracked using online
repositories and communication tools. The project also provides a pathway to enrolment in a higher degree by research.",None,None
COMP SCI 4807,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4808,Modelling and Analysis of Complex Systems,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 2201
COMP SCI 4809,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 4811,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",COMP SCI 1106 or COMP SCI 2006,COMP SCI 2201
COMP SCI 4812,Secure Software Engineering,"This course will introduce the theoretical concepts and practical approaches and tools that support the security concerns in the whole systems development lifecycle resulting in software that is secure by default. The course will cover a wide range of software security topics ranging from as security as a cross-cutting concern, methodological approaches to improving software security during different phases of software development lifecycle, integrating secure software development principles and patterns into software development processes, contemporary paradigm of secure continuous software engineering, DevSecOps. The course will be offered in a workshop style mode with small and large parts of software development projects being the major types of assessment tasks.",None,COMP SCI 2201
COMP SCI 4813,Introduction to Quantum Computing,"It is still unknown whether quantum computers will ever be a reality.
If such machines are possible, they will fundamentally change how we perform calculations, and the implications on many applications (including communications and computer security) will be tremendous.
Leaving the issue of feasibility aside, it is interesting nonetheless to study how to do computing using a quantum computer. This course aims to provide a first introduction to quantum computing. We will highlight the paradigm change between conventional computing and quantum computing, and introduce several basic quantum algorithms. If time permits, we will also discuss the implications of quantum computing on fields such as computer security and machine learning.","Linear Algebra, Alg Data Structure Analysis",COMP SCI 2201
COMP SCI 7000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7082 or COMP SCI 7201,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor data paths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.",COMP SCI 7081 & COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7081,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.","Internet protocols, architecture and basic network performance analysis as taught in COMP SCI 7039",None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 and (One of COMP SCI 7082 or COMP SCI 7201),None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 7207,None
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project.,None,"COMP SCI 7007, COMP SCI 7015 and COMP SCI 7096A; with a grade of Credit or higher in previous Semester"
COMP SCI 7097A,Master Data Science Research Project Part A,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. Further details of this course will be provided prior to commencement of offering in 2019.",None,COMP SCI 7209
COMP SCI 7097A,Master Data Science Research Project Part A,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. Further details of this course will be provided prior to commencement of offering in 2019.",None,COMP SCI 7209
COMP SCI 7097B,Master Data Science Research Project Part B,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. Further details of this course will be provided prior to commencement of offering in 2019.",None,COMP SCI 7097A
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007 and  COMP SCI 7099A; with a grade of Credit or higher in previous semester
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007 and  COMP SCI 7099A; with a grade of Credit or higher in previous semester
COMP SCI 7103,Algorithm Design and Data Structures,"The course is structured to take students from an introductory knowledge of C++ to a higher level, as well as addressing some key areas of computer programming and algorithm design. Topics include: abstract data types, class hierarchies, inheritance, friends, polymorphism and type systems; OO design principles, testing and software reuse; algorithmic strategies and introductory complexity analysis; recursion, linked lists, stacks, queues and trees.",None,None
COMP SCI 7103,Algorithm Design and Data Structures,"The course is structured to take students from an introductory knowledge of C++ to a higher level, as well as addressing some key areas of computer programming and algorithm design. Topics include: abstract data types, class hierarchies, inheritance, friends, polymorphism and type systems; OO design principles, testing and software reuse; algorithmic strategies and introductory complexity analysis; recursion, linked lists, stacks, queues and trees.",None,None
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",None,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",None,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7202,Foundations of Computer Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 7202,Foundations of Computer Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 7207,Web and Database Computing,"A modern introduction to designing and creating web-based applications. The course covers client-server architecture, database fundamentals, and the principles behind writing software that functions over networks. Widely used web development languages and environments are compared and will be used by students to implement their own applications.",COMP SCI 1101; or equivalent,None
COMP SCI 7208,Programming and Computational Thinking for Data Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 7208,Programming and Computational Thinking for Data Science,"This course will develop your coding and problem-solving skills with a focus on data and data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. You will explore Object-Oriented programming fundamentals, including the use of classes and inheritance. You will build effective problem-solving skills, including exposure to problem solving processes and strategies, simple Searching and Sorting algorithms (linear and binary search, selection and insertion sort). You will build fundamental software development skills including the use of programming environments and tools, debugging, testing and fundamentals of good programming practice, style and design.",None,None
COMP SCI 7209,Big Data Analysis and Project,"In this course, you will complete a medium-scale data science project. This project will involve evaluating, selecting and applying relevant data science techniques, principles and theory to a data science problem. Working with a real-world dataset, you will further develop your data science skills and knowledge and demonstrate autonomy, initiative and accountability. You will need to reflect on the nature of your data and identify any social and ethical concerns and identify appropriate ethical frameworks for data management. As part of the course you will deliver a written and oral presentation of your project design, plan, methodologies, and outcomes.",None,None
COMP SCI 7305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 7081,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 7201
COMP SCI 7307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",None,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7308,Cybersecurity Fundamentals,"In this course, students will be introduced to real-world cybersecurity challenges that organisations face, and learn to apply knowledge and skills gained through other Computer Science courses to address them. The challenges will be examined both from the attacker's perspective (how systems are exploited) and the defender's perspectives (how to secure systems or respond to threats).
Common attack and defence strategies for software, web applications, networks, operating systems, cryptographic systems and humans will be explored. The course will also introduce cybersecurity management concepts, including security operations, risk management, security engineering and security architecture, as well as provide guidance on different career paths specialising in cybersecurity. This course focuses on hands-on activities, and students are encouraged to participate in public and industry cybersecurity challenges, including capture-the-flag competitions.",COMP SCI 7088,"COMP SCI 7103, COMP SCI 7202, COMP SCI 7202B or COMP SCI 7208"
COMP SCI 7314,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular
techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on
practical problems.",Basic probability theory and linear algebra,None
COMP SCI 7315,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to
develop computers with the capacity to 'see' the world around them. This course
aims to convey the nature of some of the fundamental problems in vision, and to
explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7405,Research Methods in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,ELEC ENG 7057
COMP SCI 7407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 7201
COMP SCI 7408,Modelling and Analysis of Complex Systems PG,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 7201
COMP SCI 7409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 7201
COMP SCI 7411,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7412,Secure Software Engineering,"This course will introduce the theoretical concepts and practical approaches and tools that support the security concerns in the whole systems development lifecycle resulting in software that is secure by default. The course will cover a wide range of software security topics ranging from as security as a cross-cutting concern, methodological approaches to improving software security during different phases of software development lifecycle, integrating secure software development principles and patterns into software development processes, contemporary paradigm of secure continuous software engineering, DevSecOps. The course will be offered in a workshop style mode with small and large parts of software development projects being the major types of assessment tasks.",None,"One of COMP SCI 2103, COMP SCI 1103 or COMP SCI 7202"
COMP SCI 7413,Introduction to Quantum Computing,"It is still unknown whether quantum computers will ever be a reality.
If such machines are possible, they will fundamentally change how we perform calculations, and the implications on many applications (including communications and computer security) will be tremendous.
Leaving the issue of feasibility aside, it is interesting nonetheless to study how to do computing using a quantum computer. This course aims to provide a first introduction to quantum computing. We will highlight the paradigm change between conventional computing and quantum computing, and introduce several basic quantum algorithms. If time permits, we will also discuss the implications of quantum computing on fields such as computer security and machine learning.","Linear Algebra, Alg Data Structure Analysis",None
COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1012,Scientific Computing,"This course provides an introduction to basic computer programming concepts and techniques useful for Scientists, Mathematicians and Engineers. The course exposes students to practical applications of computing and commonly used tools within these domains. It introduces techniques for problem solving, program design and algorithm development.  
MATLAB (approximately 24 lectures): Basic programming: introduction to the MATLAB environment and the MATLAB help system, data types and scalar variables, arithmetic and mathematical functions, input and output, selection and iteration statements. Functions: user defined functions, function files, passing information to and from functions, function design and program decomposition, recursion. Arrays: vectors, arrays and matrices, array addressing, vector, matrix and element-by-element operations. Graphics: 2-D and 3-D plotting.  Mathematical modelling: dynamical systems, linear systems, numerical differentiation and integration.
Spreadsheets (approximately 6 lectures): Spreadsheets as a tool for Scientific Computing: calculation, using in-built functions, plotting and fitting, modelling and optimisation using the Goal-Seek and Solver tools, data analysis.",None,SACE stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

- Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
- Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
- Fundamental data structures: Primitive types; arrays; records; strings and string processing
- Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
- Human-computer interaction: Introduction to design issues
- Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,None
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

- Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
- Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
- Fundamental data structures: Primitive types; arrays; records; strings and string processing
- Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
- Human-computer interaction: Introduction to design issues
- Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,None
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

- Brief review of control structures, functions, and primitive data types
- Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behaviour and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
- Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
- Fundamentals of event-driven programming
- Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
- Introduction to computer graphics: Using a simple graphics API
- Memory management
- Overview of programming languages: History of programming languages; brief survey of programming paradigms
- Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation.",SACE Stage 1 Mathematics or equivalent,None
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

- Brief review of control structures, functions, and primitive data types
- Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behaviour and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
- Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
- Fundamentals of event-driven programming
- Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
- Introduction to computer graphics: Using a simple graphics API
- Memory management
- Overview of programming languages: History of programming languages; brief survey of programming paradigms
- Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation.",SACE Stage 1 Mathematics or equivalent,None
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202, SACE Stage 2 Mathematical Studies or equivalent"
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202, SACE Stage 2 Mathematical Studies or equivalent"
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.",COMP SCI 1101,None
COMP SCI 1106,Introduction to Software Engineering,"This course provides a general introduction to software engineering. It introduces concepts such as software processes and agile methods, and essential software development activities, from initial specification through to system maintenance. Formalisms and tools to assist in software development are also presented, including common design patterns and UML notation. There is a focus on software testing, from unit testing to the testing of software releases. Project management and professional software engineering practice will also be covered. Case studies provide practical examples for many of these concepts.",COMP SCI 1101,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 2000,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2000,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"COMP SCI 1103, COMP SCI 1203 or COMP SCI 2103"
COMP SCI 2204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2205,Software Engineering Workshop I,"This course provides software engineering students with the fundamental knowledge and practical understanding of methods, approaches, and tools for requirements engineering in different software paradigms. Topics include: deriving and reasoning about the appropriate description of a desired system, modelling and analysis knowledge and skills, documenting and evaluating requirements, and conceptual design.  The course will also focus on team work and communication skills, requirements prioritisation and negotiation, and automated software engineering tools relevant to requirement and modelling phases of software engineering.
The course will be delivered in seminar or workshop styles and a large number of assessment tasks will be project based in order to give the students skills and experience of working in a team environment.",Introduction to Software Engineering,None
COMP SCI 2206,Software Engineering Workshop II,"This course teaches methods, approaches, and tools for systematically designing and analysing software. There is a focus on approaches for both high-level and low-level software design. The course will also cover topics related to measuring design attributes and design quality evaluation. The course particularly focuses on creativity in software design and sketching for early design concept, including topics such as co-evolution of requirements and design, design fictions, and personas.
The course will be delivered in seminar or workshop style and a large number of assessment tasks will be project based in order to give the students skills and experience of coming up with divergent and unique solutions to problems while working in teams on software design projects.",Introduction to Software Engineering,None
COMP SCI 2207,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",COMP SCI 1101 or equivalent,None
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11),  Layer 2/3  protocols (MPLS); selected current topics such as: security,  multimedia protocols, quality of Service, mobility, wireless  networking, emerging protocols, network management.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. 
Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Operating System Security and Protection mechanisms:
protection domains, access lists, capability systems, principle of minimum privilege, security threats and attacks, encryption, and authentication",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.","COMP SCI 1106 , COMP SCI 2006 & COMP SCI 2201","One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2201,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 & COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3013,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",COMP SCI 1106,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3014,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3303,Engineering Software as Services I,"The objectives of this course are to provide students with the knowledge and skills required for engineering Software as a Service, SaaS. Students will learn and use state of the art industry practices from the Agile software development paradigm such as Scrum, Behaviour Driven Development, Test Driven Development and Continuous Deployment, to build SaaS applications. The course will use technologies such as Ruby on Rails, GitHub, Cucumber and RSpec to aid development. This course will cover both the theoretical concepts and practical implementation details required to engineer SaaS in Cloud based web applications. There will be a strong focus on collaborative coding and team projects.",None,COMP SCI 1103
COMP SCI 3304,Engineering Software as Services II,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering Software as a Service, SaaS, acquired by successfully completing Engineering Software as Services I. This course will put more emphasis on challenging project work that will require students to complete a semester-long, group-based, software engineering project that will implement and deploy a SaaS Cloud based web application to solve a practical business problem.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",None,COMP SCI 3303
COMP SCI 3305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, or COMP SCI 2202"
COMP SCI 3306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 3307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3308,Cybersecurity Fundamentals,"In this course, students will be introduced to real-world cybersecurity challenges that organisations face, and learn to apply knowledge and skills gained through other Computer Science courses to address them. The challenges will be examined both from the attacker's perspective (how systems are exploited) and the defender's perspectives (how to secure systems or respond to threats).
Common attack and defence strategies for software, web applications, networks, operating systems, cryptographic systems and humans will be explored. The course will also introduce cyber security management concepts, including security operations, risk management, security engineering and security architecture, as well as provide guidance on different career paths specialising in cybersecurity. This course focuses on hand-on activities, and students are encouraged to participate in public and industry cybersecurity challenges, including capture-the-flag competitions.",COMP SCI 2005,COMP SCI 1103 or COMP SCI 2103
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2207,None
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 1103,None
COMP SCI 4122,Computer Vision - Honours,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4123,Software Process Improvement - Honours,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4192,Mobile and Wireless Systems - Honours,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4194,Distributed Databases and Data Mining - Honours,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2207,None
COMP SCI 4195,Evolutionary Computation - Honours,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 1103,None
COMP SCI 4401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4404,Software Engineering Research Project,"The final year research project is aimed at providing students with an
opportunity to apply Software Engineering knowledge, understanding, and skills to an industrially sourced project. The projects are jointly supervised by academic supervisors and the external clients, who propose projects. The students are assigned to different small teams that are expected to work collaboratively on the assigned
project that will involve aspects of research and development. Students are expected to demonstrate the application of software engineering principles and practices by following defined processes, which are tracked using online repositories and communication tools. The project also provides a pathway to enrolment in a higher degree by
research.",None,None
COMP SCI 4405,Research Methods  in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,None
COMP SCI 4407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4408,Modelling and Analysis of Complex Systems,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 2201
COMP SCI 4409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 4801,Introduction to Statistical Machine Learning - Honours,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4802,Introduction to Geometric Algorithms - Honours,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4807,Advanced Algorithms - Honours,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4808,Modelling and Analysis of Complex Systems - Honours,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 2201
COMP SCI 4809,Search Based Software Engineering - Honours,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor data paths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.",COMP SCI 7081 & COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7081,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"This course introduces the elements of computer systems from the level of basic hardware gates, through to compilers, languages and applications. The aim is to give an overview of the layered nature of computer systems and how the use of simple interfaces can make the design of complex and powerful systems possible. Topics covered include: digital logic, memory, processors, assembly language, virtual machines, recursive descent parsing, code generation and operating systems.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7090,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 7088,None
COMP SCI 7092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.","Internet protocols, architecture and basic network performance analysis as taught in COMP SCI 7039",None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",knowledge of database systems as taught in COMP SCI 7207,None
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project.,None,"COMP SCI 7007, COMP SCI 7015; Must enrol in COMP SCI 7096A with a grade of Credit or higher in previous semester"
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,None
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 7207,Web and Database Computing,"A modern introduction to designing and creating web-based applications. The course covers client-server architecture, database fundamentals, and the principles behind writing software that functions over networks. Widely used web development languages and environments are compared and will be used by students to implement their own applications.",COMP SCI 1101 or equivalent,None
COMP SCI 7208,Programming and Computational Thinking for Data Science,"This course will develop your coding and problem solving skills with a focus on data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. This course will test your knowledge and skills in solving small-scale data science problems working with real-world datasets, and develop your understanding of big data in the world around you. You will also learn core computational thinking concepts including decomposition, pattern recognition, abstraction, and algorithmic thinking. These concepts will be applied to data representation and analysis and the processes of cleaning, presenting, and visualizing data. The course will also explain mathematical representations, probabilistic and statistical models, dimension reduction and Bayesian models. You will use tools such as R, MOA and data processing libraries in associated language environments.",None,None
COMP SCI 7208,Programming and Computational Thinking for Data Science,"This course will develop your coding and problem solving skills with a focus on data science. You will learn algorithm design as well as fundamental programming concepts such as data, selection, iteration and functional decomposition, data abstraction and organisation. This course will test your knowledge and skills in solving small-scale data science problems working with real-world datasets, and develop your understanding of big data in the world around you. You will also learn core computational thinking concepts including decomposition, pattern recognition, abstraction, and algorithmic thinking. These concepts will be applied to data representation and analysis and the processes of cleaning, presenting, and visualizing data. The course will also explain mathematical representations, probabilistic and statistical models, dimension reduction and Bayesian models. You will use tools such as R, MOA and data processing libraries in associated language environments.",None,None
COMP SCI 7209,Big Data Analysis and Project,"In this course, you will complete a medium-scale data science project. This project will involve evaluating, selecting and applying relevant data science techniques, principles and theory to a data science problem. Working with a real-world dataset, you will further develop your data science skills and knowledge and demonstrate autonomy, initiative and accountability. You will need to reflect on the nature of your data and identify any social and ethical concerns and identify appropriate ethical frameworks for data management. As part of the course you will deliver a written and oral presentation of your project design, plan, methodologies, and outcomes.",None,None
COMP SCI 7305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 7081,None
COMP SCI 7306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,None
COMP SCI 7307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",None,None
COMP SCI 7308,Cybersecurity Fundamentals,"In this course, students will be introduced to real-world cybersecurity challenges that organisations face, and learn to apply knowledge and skills gained through other Computer Science courses to
address them. The challenges will be examined both from the attacker's perspective (how systems are exploited) and the defender's perspectives (how to secure systems or respond to threats).
Common attack and defence strategies for software, web applications, networks, operating
systems, cryptographic systems and humans will be explored. The course will also introduce
cybersecurity management concepts, including security operations, risk management, security
engineering and security architecture, as well as provide guidance on different career paths
specialising in cybersecurity. This course focuses on hand-on activities, and students are encouraged to participate in public and industry cybersecurity challenges, including capture-the-flag competitions.",COMP SCI 7088,COMP SCI 1103 or COMP SCI 2103 or COMP SCI 7202
COMP SCI 7401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,None
COMP SCI 7402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 7201
COMP SCI 7405,Research Methods in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,ELEC ENG 7057 (where applicable)
COMP SCI 7407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,None
COMP SCI 7408,Modelling and Analysis of Complex Systems PG,"This course presents an overview of existing theories and methodologies for the analysis of complex systems behaviour. It focuses on the practical application of existing methods to the modelling and analysis of real-life complex systems, and on the identification and analysis of properties such as self-organisation, emergence and adaptability among others.",None,COMP SCI 2201
COMP SCI 7409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1012,Scientific Computing,"This course provides an introduction to basic computer programming concepts and techniques useful for Scientists, Mathematicians and Engineers. The course exposes students to practical applications of computing and commonly used tools within these domains. It introduces techniques for problem solving, program design and algorithm development.  
MATLAB (approximately 24 lectures): Basic programming: introduction to the MATLAB environment and the MATLAB help system, data types and scalar variables, arithmetic and mathematical functions, input and output, selection and iteration statements. Functions: user defined functions, function files, passing information to and from functions, function design and program decomposition, recursion. Arrays: vectors, arrays and matrices, array addressing, vector, matrix and element-by-element operations. Graphics: 2-D and 3-D plotting.  Mathematical modelling: dynamical systems, linear systems, numerical differentiation and integration.
Spreadsheets (approximately 6 lectures): Spreadsheets as a tool for Scientific Computing: calculation, using in-built functions, plotting and fitting, modelling and optimisation using the Goal-Seek and Solver tools, data analysis.",None,SACE stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.",COMP SCI 1101,None
COMP SCI 1106,Introduction to Software Engineering,"This course provides a general introduction to software engineering. It introduces concepts such as software processes and agile methods, and essential software development activities, from initial specification through to system maintenance. Formalisms and tools to assist in software development are also presented, including common design patterns and UML notation. There is a focus on software testing, from unit testing to the testing of software releases. Project management and professional software engineering practice will also be covered. Case studies provide practical examples for many of these concepts.",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"COMP SCI 1103, COMP SCI 1203 or COMP SCI 2103"
COMP SCI 2204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2205,Software Engineering Workshop I,"The objectives of this course are to provide software engineering students with the fundamental knowledge and practical understanding of methods, approaches, and tools for requirements of engineering in different software paradigms, deriving and reasoning appropriate description of a desired system. The course will also focus on modeling and analysis knowledge and skills for documenting and evaluating requirements and conceptual design. This course will also focus on team work and communication skills, requirements prioritisation and negotiation, and automated software engineering tools relevant to requirement and modelling phases of software engineering. The course design and delivery will also focus on building a unique identity of software engineering in the students from an early state of their degree program.
The course will be delivered in seminar or workshop styles and a large number of assessment tasks will be project based in order to give the students skills and experience of working in teams of projects work like real world environments.",Introduction to Software Engineering,None
COMP SCI 2206,Software Engineering Workshop II,"The objective of this course is to teach a diverse number of methods, approaches, and tools for systematically designing and analysing software. The course will focus on approaches for both high-level and low-level design software. The course will also cover the topics related to design attributes metrics and design quality evaluation. The course particularly focuses on creativity in software design and sketching for early design concepts. The course will also cover topics like co-evolution of requirements and design, design fictions, and personas.
The course will be delivered in seminar or workshop style and a large number of assessment tasks will be project based in order to give the students skills and experience of coming up with divergent and unique solutions to the same problems while working in teams on software deign projects.",Introduction to Software Engineering,None
COMP SCI 2207,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",COMP SCI 1101 or equivalent,None
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. 
Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Operating System Security and Protection mechanisms:
protection domains, access lists, capability systems, principle of minimum privilege, security threats and attacks, encryption, and authentication",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.","COMP SCI 1106 , COMP SCI 2006 & COMP SCI 3002,","One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2004,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 & COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3013,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",COMP SCI 2006,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3014,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3303,Engineering Software as Services I,"The objectives of this course are to provide students with the knowledge and skills required for engineering Software as a Service, SaaS. Students will use practices such as Scrum, continuous deployment and Behaviour Driven Development to build SaaS applications. The course will use technologies such as Ruby on Rails, GitHub, Cucumber and RSpec to aid development. This course will cover both the theoretical concepts and practical implementation details required to engineer SaaS in Cloud based web applications. There will be a strong focus on collaborative coding and team projects.",None,COMP SCI 1103
COMP SCI 3304,Engineering Software as Services II,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering software as services acquired by successfully completing Engineering Software as Services (ESS) I. The students will be exposed to more advanced topics and complex problems to be solved using state-of-the-art software development methods (such as Agile methods, Lean approaches, and DevOps) and technologies (Ruby on Rails, and Cloud Computing). This course will put more emphasis on challenging project work that will require students to learn and apply more advanced concepts, implementation technologies and techniques in developing cloud-enabled software services to be deployed and operated on private, public, or hybrid Cloud platforms.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",None,COMP SCI 3303
COMP SCI 3305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, or COMP SCI 2202"
COMP SCI 3306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 3307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 4000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4100,Software Architecture - Honours,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 4122,Computer Vision - Honours,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4123,Software Process Improvement - Honours,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4177,Solving Engineering Models - Honours,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4192,Mobile and Wireless Systems - Honours,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4194,Distributed Databases and Data Mining - Honours,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4195,Evolutionary Computation - Honours,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4404,Software Engineering Research Project,"Final year research project, jointly supervised by software engineering and computer science academics with external industry involvement. The research topic will be selected from CS staff research interests, while the area of application will be negotiated with industry partners. Students will be expected to learn and demonstrate the application of SE principles to conduct research for industry based clients outside the school.
The project will provide a pathway to enrolment in a higher degree by research.",None,None
COMP SCI 4405,Research Methods  in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,None
COMP SCI 4407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 4801,Introduction to Statistical Machine Learning - Honours,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4802,Introduction to Geometric Algorithms - Honours,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4807,Advanced Algorithms - Honours,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4809,Search Based Software Engineering - Honours,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 7000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7006 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor data paths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.","COMP SCI 7006, COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in  sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",basic level of proficiency in some programming language & engineering mathematics,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7084 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7090,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 7088,None
COMP SCI 7092,Mobile and Wireless Systems,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.","Internet protocols, architecture and basic network performance analysis as taught in COMP SCI 7039",None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",knowledge of database systems as taught in COMP SCI 7083,None
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015; Must enrol in COMP SCI 7096A with a grade of Credit or higher in previous semester"
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099A,Master Computer Science Research Project - Part A,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7099B,Master Computer Science Research Project - Part B,The project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,COMP SCI 7080 or COMP SCI 7202
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 7207,Web and Database Computing,"A modern introduction to designing and creating web-based applications. The course covers client-server architecture, database fundamentals, and the principles behind writing software that functions over networks. Widely used web development languages and environments are compared and will be used by students to implement their own applications.",COMP SCI 1101 or equivalent,None
COMP SCI 7305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 7081,None
COMP SCI 7306,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,None
COMP SCI 7307,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",None,None
COMP SCI 7401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 7201
COMP SCI 7402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 7201
COMP SCI 7405,Research Methods in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,ELEC ENG 7057 (where applicable)
COMP SCI 7407,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,None
COMP SCI 7409,Search Based Software Engineering,"Many activities in software engineering involve an element of search. Some examples include selection of requirements, localisation and correction of defects, and the optimisation of test coverage. The fast-growing field of Search-Based Software Engineering (SBSE) applies computing resources to these search problems to improve the efficiency and quality of software engineering processes.
This course aims to introduce students to a wide range of SBSE terminology, techniques, and processes. The concepts taught in the lectures will be practised and reinforced by participation in three projects, and one seminar with a written essay on a recent SBSE-related conference article.",None,COMP SCI 2201
COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1012,Scientific Computing,"This course provides an introduction to basic computer programming concepts and techniques useful for Scientists, Mathematicians and Engineers. The course exposes students to practical applications of computing and commonly used tools within these domains. It introduces techniques for problem solving, program design and algorithm development.  
MATLAB (approximately 24 lectures): Basic programming: introduction to the MATLAB environment and the MATLAB help system, data types and scalar variables, arithmetic and mathematical functions, input and output, selection and iteration statements. Functions: user defined functions, function files, passing information to and from functions, function design and program decomposition, recursion. Arrays: vectors, arrays and matrices, array addressing, vector, matrix and element-by-element operations. Graphics: 2-D and 3-D plotting.  Mathematical modelling: dynamical systems, linear systems, numerical differentiation and integration.
Spreadsheets (approximately 6 lectures): Spreadsheets as a tool for Scientific Computing: calculation, using in-built functions, plotting and fitting, modelling and optimisation using the Goal-Seek and Solver tools, data analysis.",None,SACE stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.",COMP SCI 1101,None
COMP SCI 1105,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",None,None
COMP SCI 1106,Introduction to Software Engineering,"This course provides a general introduction to software engineering. It introduces concepts such as software processes and agile methods, and essential software development activities, from initial specification through to system maintenance. Formalisms and tools to assist in software development are also presented, including common design patterns and UML notation. There is a focus on software testing, from unit testing to the testing of software releases. Project management and professional software engineering practice will also be covered. Case studies provide practical examples for many of these concepts.",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202"
COMP SCI 2000NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",None,None
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"COMP SCI 1103, COMP SCI 1203 or COMP SCI 2103"
COMP SCI 2204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3001NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,None
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. 
Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Operating System Security and Protection mechanisms:
protection domains, access lists, capability systems, principle of minimum privilege, security threats and attacks, encryption, and authentication",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 2006 & COMP SCI 3002,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006NA,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 3006NA,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2004,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3007NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 & COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3012NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",None,None
COMP SCI 3013,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",COMP SCI 2006,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3013NA,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",None,None
COMP SCI 3014,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3014NA,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",None,None
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 3303,Engineering Software as Services I,"The objectives of this course are to provide students with the knowledge and skills required for engineering Software as a Service, SaaS. Students will use practices such as Scrum, continuous deployment and Behaviour Driven Development to build SaaS applications. The course will use technologies such as Ruby on Rails, GitHub, Cucumber and RSpec to aid development. This course will cover both the theoretical concepts and practical implementation details required to engineer SaaS in Cloud based web applications. There will be a strong focus on collaborative coding and team projects.",None,COMP SCI 1103
COMP SCI 3304,Engineering Software as Services II,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering software as services acquired by successfully completing Engineering Software as Services (ESS) I. The students will be exposed to more advanced topics and complex problems to be solved using state-of-the-art software development methods (such as Agile methods, Lean approaches, and DevOps) and technologies (Ruby on Rails, and Cloud Computing). This course will put more emphasis on challenging project work that will require students to learn and apply more advanced concepts, implementation technologies and techniques in developing cloud-enabled software services to be deployed and operated on private, public, or hybrid Cloud platforms.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",None,COMP SCI 3303
COMP SCI 3305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, or COMP SCI 2202"
COMP SCI 3305NA,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015A,Computer Science Honours Research Project Part A,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4015B,Computer Science Honours Research Project Part B,This is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.,None,None
COMP SCI 4022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 4092,Mobile and Wireless Networks,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4122,Computer Vision - Honours,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4123,Software Process Improvement - Honours,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,None
COMP SCI 4177,Solving Engineering Models - Honours,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4191,Commercialising IT Research - Honours,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 4192,Mobile and Wireless Networks - Honours,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4194,Distributed Databases and Data Mining - Honours,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4195,Evolutionary Computation - Honours,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 4404,Software Engineering Research Project,"Final year research project, jointly supervised by software engineering and computer science academics with external industry involvement. The research topic will be selected from CS staff research interests, while the area of application will be negotiated with industry partners. Students will be expected to learn and demonstrate the application of SE principles to conduct research for industry based clients outside the school.
The project will provide a pathway to enrolment in a higher degree by research.",None,None
COMP SCI 4405,Research Methods  in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,None
COMP SCI 4406,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 4801,Introduction to Statistical Machine Learning - Honours,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4802,Introduction to Geometric Algorithms - Honours,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4803,Mining Big Data - Honours,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 4806,Secure Programming - Honours,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 4999B,Honours Computer Science Part 2,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours program will be determined from year to year and will consist mostly of advanced, research focused courses run by the School of Computer Science. Other courses may be included, subject to the approval of the Head of the School. Students will be required to undertake a major computing project, under the guidance of a supervisor.",A major in Computer Science,Degree & major in Comp.Sc; Passes in Level II & III courses in Maths & Comp. Sciences approved by Head of School - students with a different background should apply to Head of School
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7006 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7015NA,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 7015NA,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 7022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7023,Software Process Improvement,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor data paths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7039NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.","COMP SCI 7006, COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.",None,None
COMP SCI 7077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in  sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",basic level of proficiency in some programming language & engineering mathematics,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",None,None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7084 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089NA,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",None,None
COMP SCI 7090,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 7088,None
COMP SCI 7090NA,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",None,None
COMP SCI 7091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 7092,Mobile and Wireless Networks,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.","Internet protocols, architecture and basic network performance analysis as taught in COMP SCI 7039",None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",knowledge of database systems as taught in COMP SCI 7083,None
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015; Must enrol in COMP SCI 7096A with a grade of Credit or higher in previous semester"
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7099A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7099A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7099B,Master Computer Science Research Project - Part B,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7099B,Master Computer Science Research Project - Part B,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,COMP SCI 7080 or COMP SCI 7202
COMP SCI 7201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 7301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matchings, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,None
COMP SCI 7305,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 7081,None
COMP SCI 7305NA,Parallel and Distributed Computing,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",COMP SCI 7081,None
COMP SCI 7401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 7201
COMP SCI 7402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 7201
COMP SCI 7403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 7201
COMP SCI 7405,Research Methods in Software Engineering and Computer Science,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",None,ELEC ENG 7057 (where applicable)
COMP SCI 7406,Secure Programming,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
APP MTH 4011A,Honours Applied Maths & Comp Science Part 1,Students are required to take 5 courses and a project in Applied Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School Computer Science.,None,At least 9 units of Level III Applied Mathematics courses at credit standard or above and a strong background in Computer Science
APP MTH 4011A,Honours Applied Maths & Comp Science Part 1,Students are required to take 5 courses and a project in Applied Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School Computer Science.,None,At least 9 units of Level III Applied Mathematics courses at credit standard or above and a strong background in Computer Science
APP MTH 4011B,Honours Applied Maths & Comp Science Part 2,Students are required to take 5 courses and a research project in Applied Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School Computer Science.,None,At least 9 units of Level III Applied Mathematics courses at credit standard or above and a strong background in Computer Science.
APP MTH 4011B,Honours Applied Maths & Comp Science Part 2,Students are required to take 5 courses and a research project in Applied Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School Computer Science.,None,At least 9 units of Level III Applied Mathematics courses at credit standard or above and a strong background in Computer Science.
COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1012,Scientific Computing,"This course provides an introduction to basic computer programming concepts and techniques useful for Scientists, Mathematicians and Engineers. The course exposes students to practical applications of computing and commonly used tools within these domains. It introduces techniques for problem solving, program design and algorithm development.  
MATLAB (approximately 24 lectures): Basic programming: introduction to the MATLAB environment and the MATLAB help system, data types and scalar variables, arithmetic and mathematical functions, input and output, selection and iteration statements. Functions: user defined functions, function files, passing information to and from functions, function design and program decomposition, recursion. Arrays: vectors, arrays and matrices, array addressing, vector, matrix and element-by-element operations. Graphics: 2-D and 3-D plotting.  Mathematical modelling: dynamical systems, linear systems, numerical differentiation and integration.
Spreadsheets (approximately 6 lectures): Spreadsheets as a tool for Scientific Computing: calculation, using in-built functions, plotting and fitting, modelling and optimisation using the Goal-Seek and Solver tools, data analysis.",None,SACE stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202"
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.",COMP SCI 1101,None
COMP SCI 1105,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1300,Exchange Studies - Computer Science,None,None,None
COMP SCI 1300,Exchange Studies - Computer Science,None,None,None
COMP SCI 1301,Exchange Studies - Computer Science,None,None,None
COMP SCI 1301,Exchange Studies - Computer Science,None,None,None
COMP SCI 1302,Exchange Studies - Computer Science,None,None,None
COMP SCI 1302,Exchange Studies - Computer Science,None,None,None
COMP SCI 1303,Exchange Studies - Computer Science,None,None,None
COMP SCI 1303,Exchange Studies - Computer Science,None,None,None
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2000NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",None,None
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2006,Introduction to Software Engineering,"Design: software design, UML notation, static models - identifying classes and associations, dynamic models - identifying states, events, transitions, use cases, mapping designs into code. Specification: the scope, role and styles of software specification. Testing: modes of testing, organising test suites. Human issues: managing object-oriented projects, ethics, professional practice.",MATHS 1012 or MATHS 1008,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2007,Topics in Computer Graphics,"Introduction to a specialised area of Computer Science. Topics in computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2007,Topics in Computer Graphics,"Introduction to a specialised area of Computer Science. Topics in computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"COMP SCI 1103, COMP SCI 1203 or COMP SCI 2103"
COMP SCI 2204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3001NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,None
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3004NA,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.",None,None
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 2006 & COMP SCI 3002,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006NA,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 3006NA,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2004,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3007NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 3009NA,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming;  environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",None,None
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 & COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3012NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",None,None
COMP SCI 3013,Event Driven Computing,"Event driven paradigm:  Finite State Automata, their behaviour and implementation. Correspondence with regular expressions.  Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing.
Building Graphical User Interfaces:  model view controller paradigm. Building GUIs with the  Java Swing library. Ease of use and human-computer interaction issues. Introduction to design patterns for managing complexity in large systems
Practical projects cover the use of FSAs for control logic and GUI design.",COMP SCI 2006,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3014,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3014NA,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",None,None
COMP SCI 3019,Advanced Topics in Computer Graphics,"Specialised study within an area of Computer Graphics, guided by a supervisor. Topics include computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,DESST 2506 or COMP SCI 2007
COMP SCI 3019,Advanced Topics in Computer Graphics,"Specialised study within an area of Computer Graphics, guided by a supervisor. Topics include computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,DESST 2506 or COMP SCI 2007
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 3303,Engineering Software as Services I,"The objectives of this course are to provide students with the fundamental knowledge, understanding, and skills required for engineering software as services using state-of-the-art software development methods (such as Agile methods, Lean approaches, and DevOps) and technologies (Ruby on Rails, and Cloud Computing).  That is, designing, building, and evolving large scale IT systems and infrastructures to exploit the cloud-computing paradigm. This course will cover not only the theoretical concepts and implementation technologies and techniques for developing cloud-enabled software services but will also provide knowledge and skills in methods, approaches, and tools for engineering software services to be deployed and operated on private, public, or hybrid cloud platforms. This course provides students with the technical and non-technical knowledge necessary for leveraging the technological advances in cloud computing and methodological innovations in Agile and Lean approaches to engineering software services..
The course will be a 3 Unit one semester course offered in the first semester of third year of the BE(SE) degree program.",None,COMP SCI 1103 Alg. Design and Data Structures.
COMP SCI 3304,Engineering Software as Services II,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering software as services acquired by successfully completing Engineering Software as Services (ESS) I. The students will be exposed to more advanced topics and complex problems to be solved using state-of-the-art software development methods (such as Agile methods, Lean approaches, and DevOps) and technologies (Ruby on Rails, and Cloud Computing). This course will put more emphasis on challenging project work that will require students to learn and apply more advanced concepts, implementation technologies and techniques in developing cloud-enabled software services to be deployed and operated on private, public, or hybrid Cloud platforms.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",None,COMP SCI 3303
COMP SCI 4014A,Software Engineering Honours Research Project A,"Final year research project, jointly supervised by software engineering and computer science academics with possible external industry involvement. The research topic will be selected from CS staff research interests. Students will be expected to learn and demonstrate the application of SE principles to research conduct. Non-SE academic supervisors will act as clients and research advisors, while SE staff will evaluate the students? software engineering practice.
The project will be of 2 semesters? duration, with 3 units in semester 1 (part A) and 6 units in semester 2 (part B). It will provide a pathway to enrolment in a higher degree by research.",COMP SCI 3018,None
COMP SCI 4014B,Software Engineering Honours Research Project B,"Final year research project, jointly supervised by software engineering and computer science academics with possible external industry involvement. The research topic will be selected from CS staff research interests. Students will be expected to learn and demonstrate the application of SE principles to research conduct. Non-SE academic supervisors will act as clients and research advisors, while SE staff will evaluate the students? software engineering practice.
The project will be of 2 semesters? duration, with 3 units in semester 1 (part A) and 6 units in semester 2 (part B). It will provide a pathway to enrolment in a higher degree by research.",COMP SCI 3018,None
COMP SCI 4022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4023,Software Process Improvement,"The course introduces students to elements of the Software Engineering Institute's Personal Software Process, PSP. The PSP is introduced in increasing levels of sophistication with the essential elements illustrated by programming assignments and report writing.",None,None
COMP SCI 4044,Computer System Security,"The course introduces topics in computer and network security research, with 
focus on current research. Topics covered include security models and 
policies; Operating Systems security: authentication and authorisation; 
Application security and malware; Applied cryptography and cryptanalysis; 
Network security: challenges, attacks and defences; Web and cloud security; 
Trusted computing.","COMP SCI 3005, COMP SCI 3004, COMP SCI 3001, Additionally, some basic understanding of parsing and parsers and Computer Systems is an advantage.  No detailed knowledge of advanced cryptographic systems is required.",None
COMP SCI 4077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 4092,Mobile and Wireless Networks,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.",COMP SCI 3001,None
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 4998A,Honours Computer Science (Two-Year) Continuing,None,None,None
COMP SCI 4998A,Honours Computer Science (Two-Year) Continuing,None,None,None
COMP SCI 4998B,Honours Computer Science (Two-Year) Final,None,None,None
COMP SCI 4998B,Honours Computer Science (Two-Year) Final,None,None,None
COMP SCI 4999A,Honours Computer Science Part 1,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours program  will be determined from year to year and will consist mostly of advanced, research focused courses run by the School of Computer Science. Other courses may be included, subject to the approval of the Head of the School. Students will be required to undertake a major computing project, under the guidance of a supervisor.",A major in Computer Science,Degree & major in Comp.Sc; Passes in Level II & III courses in Maths & Comp. Sciences approved by Head of School - students with a different background should apply to Head of School
COMP SCI 4999A,Honours Computer Science Part 1,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours program  will be determined from year to year and will consist mostly of advanced, research focused courses run by the School of Computer Science. Other courses may be included, subject to the approval of the Head of the School. Students will be required to undertake a major computing project, under the guidance of a supervisor.",A major in Computer Science,Degree & major in Comp.Sc; Passes in Level II & III courses in Maths & Comp. Sciences approved by Head of School - students with a different background should apply to Head of School
COMP SCI 4999B,Honours Computer Science Part 2,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours program will be determined from year to year and will consist mostly of advanced, research focused courses run by the School of Computer Science. Other courses may be included, subject to the approval of the Head of the School. Students will be required to undertake a major computing project, under the guidance of a supervisor.",A major in Computer Science,Degree & major in Comp.Sc; Passes in Level II & III courses in Maths & Comp. Sciences approved by Head of School - students with a different background should apply to Head of School
COMP SCI 4999B,Honours Computer Science Part 2,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours program will be determined from year to year and will consist mostly of advanced, research focused courses run by the School of Computer Science. Other courses may be included, subject to the approval of the Head of the School. Students will be required to undertake a major computing project, under the guidance of a supervisor.",A major in Computer Science,Degree & major in Comp.Sc; Passes in Level II & III courses in Maths & Comp. Sciences approved by Head of School - students with a different background should apply to Head of School
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7006 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7015NA,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 7015NA,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 7022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7023,Software Process Improvement,"The course introduces students to elements of the Software Engineering Institute's Personal Software Process, PSP. The PSP is introduced in increasing levels of sophistication with the essential elements illustrated by programming assignments and report writing.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor data paths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7031NA,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",None,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7039NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7044,Computer System Security,"The course introduces topics in computer and network security research, with 
focus on current research. Topics covered include security models and 
policies; Operating Systems security: authentication and authorisation; 
Application security and malware; Applied cryptography and cryptanalysis; 
Network security: challenges, attacks and defences; Web and cloud security; 
Trusted computing.","Computer Architecture, Operating Systems and Computer Networks are assumed.  Additionally, some basic understanding of parsing and parsers and Computer Systems is an advantage.  No detailed knowledge of advanced cryptographic systems is required.",None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7064NA,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.",None,None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.","COMP SCI 7006, COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.",None,None
COMP SCI 7077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in  sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",basic level of proficiency in some programming language & engineering mathematics,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",None,None
COMP SCI 7084,Introduction to Software Engineering,"Design: software design, UML notation, static models - identifying classes and associations; dynamic models - identifying states, events, transitions, use cases, mapping designs into code. Specification: the scope, role and styles of software specification. Testing: modes of testing, organising test suites. Human issues: managing object-oriented projects, ethics, professional practice.","COMP SCI 7082 or COMP SCI 7201, Mathematics as taught in MATHS 1012 or MATHS 1000A/B or MATHS 1008",None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debugging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7084 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7090,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 7088,None
COMP SCI 7090NA,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",None,None
COMP SCI 7091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 7092,Mobile and Wireless Networks,"This course examines the characteristics of mobile and wireless networks and the impact of these characteristics on the development of software and supporting protocols.  Topics covered include: mobile and wireless application design and development environments, middleware support, protocol requirements for ad-hoc and sensor networks, wireless & mobile security vulnerabilities and standards, supporting reliable communication in lossy and intermittently connected networks; challenges and architectures for wireless mobility - 4G networks, Wi-Fi, Wi-Max, Bluetooth, Mobile IP, convergence of voice and data networks.","Internet protocols, architecture and basic network performance analysis as taught in COMP SCI 7039",None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",knowledge of database systems as taught in COMP SCI 7083,None
COMP SCI 7095A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7095A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7095B,Master Computer Science Research Project - Part B,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007;  COMP SCI 7095A with a grade of Credit or higher in previous semester
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015; Must enrol in COMP SCI 7096A with a grade of Credit or higher in previous semester"
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7099A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7099A,Master Computer Science Research Project - Part A,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007
COMP SCI 7099B,Master Computer Science Research Project - Part B,"Students intending to enrol in Honours Computer Science are advised to consult the Head of the School of Computer Science, preferably before enrolling for Level III courses.
The Honours project is an advanced research project conducted individually under the guidance of an academic supervisor. It continues over two semesters and gives students the chance to investigate and contribute to an area at the cutting edge of computer science. Project topics vary from year to year depending on staff availability and research focus.",None,COMP SCI 7007;  COMP SCI 7099A with a grade of Credit or higher in previous semester
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,COMP SCI 7080 or COMP SCI 7202
COMP SCI 7201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:
Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7204,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus. Different approaches to programming: functional and logic paradigms. Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions. Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model. Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 7301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matchings, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,None
COMP SCI 7401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 7201
COMP SCI 7403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 7201
PURE MTH 4004A,Honours Comp Science & Pure Maths Part 1,Students are required to take 5 courses and a research project in Pure Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School of Computer Science.,None,At least 9 units of Level III Pure Mathematics courses at credit standard or above and a strong background in Computer Science.
PURE MTH 4004A,Honours Comp Science & Pure Maths Part 1,Students are required to take 5 courses and a research project in Pure Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School of Computer Science.,None,At least 9 units of Level III Pure Mathematics courses at credit standard or above and a strong background in Computer Science.
PURE MTH 4004B,Honours Comp Science & Pure Maths Part 2,Students are required to take 5 courses and a research project in Pure Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School of Computer Science.,None,At least 9 units of Level III Pure Mathematics courses at credit standard or above and a strong background in Computer Science.
PURE MTH 4004B,Honours Comp Science & Pure Maths Part 2,Students are required to take 5 courses and a research project in Pure Mathematics and Computer Science as approved by the Head of the School of Mathematical Sciences and the Head of the School of Computer Science.,None,At least 9 units of Level III Pure Mathematics courses at credit standard or above and a strong background in Computer Science.
COMP SCI 1010,Puzzle Based Learning,"The focus of this course is on getting students to think about framing and solving unstructured problems (those that are not encountered at the end of some textbook chapter). The general objective is to increase the student's mathematical awareness and problem-solving skills by discussing a variety of puzzles. The puzzle-based learning approach has a long tradition as the first mathematical puzzles were found in Sumerian texts that date back to around 2,500 BC The puzzles selected for the course satisfy most of the following criteria: a) Generality: educational puzzles explain some universal mathematical problem-solving principles;  b) Simplicity: educational puzzles are easy to state and easy to remember; c) Eureka factor: educational puzzles often frustrate the problem-solver! Eventually a Eureka! moment is reached. The Eureka factor also implies that educational puzzles often have elementary solutions that are not obvious; d) Entertainment factor: educational puzzles are very entertaining!

Such educational puzzles are used to illustrate basic concepts of critical thinking, mathematics, and problem-solving. The course presents some problem-solving rules and covers issues of understanding the problem and the role of intuition in problem-solving activities. Further, some mathematical problem-solving principles are discussed and elements of modelling, constraint-processing, optimization, probability, statistics, simulation, pattern recognition, and strategy are introduced.",SACE level 2 Maths Sciences,None
COMP SCI 1012,Scientific Computing,"This course provides an introduction to basic computer programming concepts and techniques useful for Scientists, Mathematicians and Engineers. The course exposes students to practical applications of computing and commonly used tools within these domains. It introduces techniques for problem solving, program design and algorithm development.  
MATLAB (approximately 24 lectures): Basic programming: introduction to the MATLAB environment and the MATLAB help system, data types and scalar variables, arithmetic and mathematical functions, input and output, selection and iteration statements. Functions: user defined functions, function files, passing information to and from functions, function design and program decomposition, recursion. Arrays: vectors, arrays and matrices, array addressing, vector, matrix and element-by-element operations. Graphics: 2-D and 3-D plotting.  Mathematical modelling: dynamical systems, linear systems, numerical differentiation and integration.
Spreadsheets (approximately 6 lectures): Spreadsheets as a tool for Scientific Computing: calculation, using in-built functions, plotting and fitting, modelling and optimisation using the Goal-Seek and Solver tools, data analysis.",None,SACE stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1101,Introduction to Programming,"This course is designed for students with no prior programming experience. Students who have experience in procedural programming languages may consider taking COMP SCI 1102 Object Oriented Programming instead. 
This course introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. The course also offers an introduction to the historical and social context of computing and an overview of computer science as a discipline. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments
-  Human-computer interaction: Introduction to design issues
-  Social context of computing: History of computing and computers; evolution of ideas and machines; social impact of computers and the Internet; professionalism, codes of ethics, and responsible conduct; copyrights, intellectual property, and software piracy.",None,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1102,Object Oriented Programming,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",COMP SCI 1101,SACE Stage 2 Mathematical Studies or equivalent
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,COMP SCI 1009 or COMP SCI 1102
COMP SCI 1103,Algorithm Design & Data Structures,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",None,COMP SCI 1009 or COMP SCI 1102
COMP SCI 1104,Grand Challenges in Computer Science,"Introduction to key research areas in Computer Science and the ""Grand Challenges"". Topics include AI, Algorithms, Distributed Systems, Networking, Data Mining and Hardware; scholarship and writing in the discipline, critical analysis and thinking skills.",COMP SCI 1101,None
COMP SCI 1105,Web & Database Computing,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1201,Introduction to Programming for Engineers,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",None,None
COMP SCI 1202,Object-Oriented Programming for Engineers,"Introduces the concepts of object-oriented programming to students with a background in the procedural paradigm. The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behaviour and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",None,"One of COMP SCI 1008, COMP SCI 1201, MECH ENG 1100, MECH ENG 1101, MECH ENG 1102, MECH ENG 1103, MECH ENG 1104 or MECH ENG 1105"
COMP SCI 1202,Object-Oriented Programming for Engineers,"Introduces the concepts of object-oriented programming to students with a background in the procedural paradigm. The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behaviour and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",None,"One of COMP SCI 1008, COMP SCI 1201, MECH ENG 1100, MECH ENG 1101, MECH ENG 1102, MECH ENG 1103, MECH ENG 1104 or MECH ENG 1105"
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2000,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",MATHS1012 or MATHS 1008,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2000NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",None,None
COMP SCI 2004NA,Data Structures and Algorithms,"Program development techniques including basic ideas of correctness and proof; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Notions of complexity and analysis; Choosing data structures",None,None
COMP SCI 2005,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threards and concurrency. Timers and their uses.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2006,Introduction to Software Engineering,"Design: software design, UML notation, static models - identifying classes and associations, dynamic models - identifying states, events, transitions, use cases, mapping designs into code. Specification: the scope, role and styles of software specification. Testing: modes of testing, organising test suites. Human issues: managing object-oriented projects, ethics, professional practice.",MATHS 1012 or MATHS 1008,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202"
COMP SCI 2007,Topics in Computer Graphics,"Introduction to a specialised area of Computer Science. Topics in computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2007,Topics in Computer Graphics,"Introduction to a specialised area of Computer Science. Topics in computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2008,Topics in Computer Science,Introduction to a specialised area of Computer Science. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.,None,"COMP SCI 1103, COMP SCI 1104"
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2103,Algorithm Design & Data Structures for Engineers,"Builds on the foundation provided by the COMP SCI 1201-1202 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering.  Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables and trees), the basics of algorithmic analysis and an introduction to the principles of language translation
- Review of elementary programming concepts
-Fundamental data structures: Stacks; queues; linked lists
- Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
- Fundamental computing algorithms: O(N log N) sorting algorithms
- Recursion: The concept of recursion; recursive backtracking; implementation of recursion
- Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average and worst case behaviours; big 'O', little 'o', omega and theta notation
- Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
- Overview of programming languages: Programming paradigms
- Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse.",None,COMP SCI 1102 or COMP SCI 1202
COMP SCI 2201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 2201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",None,"One of COMP SCI 1009, COMP SCI 1007, COMP SCI 1103, COMP SCI 1203, or COMP SCI 2202"
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202B,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,COMP SCI 2202A
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 2203,Problem Solving & Software Development,"This course presents students with open-ended and complex programming problems that focus on developing their software design and implementation skills. The course will also introduce software engineering principles, and particularly approaches to software quality.",None,"COMP SCI 1103, COMP SCI 1203 or COMP SCI 2103"
COMP SCI 3001,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3001NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",None,None
COMP SCI 3004,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3005,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 2000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3005NA,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",None,None
COMP SCI 3006,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 2006 & COMP SCI 3002,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3006NA,Software Engineering & Project,"Within the context of a semester-long, group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 3007,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 2004,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3007NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 3009,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming;  environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",None,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3009NA,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming;  environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",None,None
COMP SCI 3012,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",COMP SCI 2000 & COMP SCI 3001,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3012NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI.",None,None
COMP SCI 3013,Event Driven Computing,"Event driven paradigm:  Finite State Automata, their behaviour and implementation. Correspondence with regular expressions.  Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing.
Building Graphical User Interfaces:  model view controller paradigm. Building GUIs with the  Java Swing library. Ease of use and human-computer interaction issues. Introduction to design patterns for managing complexity in large systems
Practical projects cover the use of FSAs for control logic and GUI design.",COMP SCI 2006,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3013NA,Event Driven Computing,"Event driven paradigm:  Finite State Automata, their behaviour and implementation. Correspondence with regular expressions.  Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing.
Building Graphical User Interfaces:  model view controller paradigm. Building GUIs with the  Java Swing library. Ease of use and human-computer interaction issues. Introduction to design patterns for managing complexity in large systems
Practical projects cover the use of FSAs for control logic and GUI design.",None,None
COMP SCI 3014,Computer Graphics,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 2005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202"
COMP SCI 3016,Computational Cognitive Science,"This course provides an introduction to computational theories of human cognition. We use formal models from artificial intelligence and mathematical psychology to consider fundamental issues in human knowledge representation, inductive reasoning, learning, decision-making and language acquisition. What kind of informational structures describe the organisation of human knowledge, and what kinds of inferences do they license? How do humans make choices given time constraints, computational limitations, and external costs imposed by the world? What kinds of innate knowledge (if any) must people have? And how can formal models of human cognition inform our understanding of the design of intelligent machines? Representative modelling techniques include stochastic processes, Bayesian models, formal grammars, and random graph models.",Basic probability as taught in MATHS 2103 & some familiarity with programming in MATLAB,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202 & one of APP MTH 1000 or COMP SCI 1012"
COMP SCI 3017,Software Engineering Group Project I - Part A,"This course in software engineering provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering. Students will undertake a small group-based project, introducing the students to the practice of the software development methodologies and techniques described in lectures.",None,None
COMP SCI 3018,Software Engineering Group Project I - Part B,"Students will undertake a medium-sized group project that will further expose students to the practice of software development methodologies and techniques throughout various stages in the development lifecycle.
Regular weekly meetings will be held with teaching staff, in which students will be expected to: report on progress; demonstrate software prototypes; and present their software development methodologies and artefacts. 

Students will write a research report of approximately 5000 words on some aspect of current software engineering practice.",None,COMP SCI 3017
COMP SCI 3019,Advanced Topics in Computer Graphics,"Specialised study within an area of Computer Graphics, guided by a supervisor. Topics include computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,DESST 2506 or COMP SCI 2007
COMP SCI 3019,Advanced Topics in Computer Graphics,"Specialised study within an area of Computer Graphics, guided by a supervisor. Topics include computer graphics, theory and applications. Combines guided reading and research with a significant individual or group project component.

This course is subject to availability of adequate supervision resource, students should contact the School of Computer Science for further information.",None,DESST 2506 or COMP SCI 2007
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3020,Advanced Topics in Computer Science,"Specialised study within an area of Computer Science, guided by a supervisor. Topics include theoretical and applied aspects of Computer Science. Combines guided reading and research with a significant individual or group project component.",None,COMP SCI 2008
COMP SCI 3301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,COMP SCI 2201
COMP SCI 4000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 4003A,Software Engineering Group Project II Part A,"Students will undertake a year long industry-based group project. The project will be conducted in groups of 3-5 students in collaboration with an industry partner. Students will have regular meetings with teaching staff and industry stakeholders in which they will be expected to: elicit requirements; conduct software demonstrations; and report on progress. Students will be expected to apply and demonstrate the use of rigorous software development methodologies and techniques in their project, including the areas of: configuration management; project planning; requirements capture and tracking; software quality management; and software verification and validation. Students will also be expected to assess and where appropriate, apply software tools to support rigorous software development.",None,None
COMP SCI 4003B,Software Engineering Group Project II Part B,Students will continue the project commenced in COMP SCI 4003A.,None,COMP SCI 4003A
COMP SCI 4022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",None,None
COMP SCI 4023,Software Process Improvement,"The course introduces students to elements of the Software Engineering Institute's Personal Software Process, PSP. The PSP is introduced in increasing levels of sophistication with the essential elements illustrated by programming assignments and report writing.",None,None
COMP SCI 4044,Computer System Security,"The course introduces topics in computer and network security research, with 
focus on current research. Topics covered include security models and 
policies; Operating Systems security: authentication and authorisation; 
Application security and malware; Applied cryptography and cryptanalysis; 
Network security: challenges, attacks and defences; Web and cloud security; 
Trusted computing.","COMP SCI 3005, COMP SCI 3004, COMP SCI 3001, Additionally, some basic understanding of parsing and parsers and Computer Systems is an advantage.  No detailed knowledge of advanced cryptographic systems is required.",None
COMP SCI 4077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",None,None
COMP SCI 4091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 4094,Distributed Databases and Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",Knowledge of database systems as taught in COMP SCI 2002,None
COMP SCI 4095,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 2004,None
COMP SCI 4401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 2201
COMP SCI 4402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 2201
COMP SCI 4403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 2201
COMP SCI 7000,Software Architecture,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7007,Specialised Programming,"Computational problem-solving with a focus on group learning and practice. Lecture topics cover general solution categories including: brute-force, divide and conquer, dynamic programming, greedy algorithms and search techniques",None,None
COMP SCI 7015,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",COMP SCI 7006 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7015NA,Software Engineering & Project,"Within the context of a semester long group-based software engineering project, this course provides an introduction to the production of high quality software solutions to large tasks. Among the topics covered in this course are the following: models of the software life-cycle, requirements analysis and specification, program design techniques and paradigms, software specification techniques, configuration management and version control, quality assurance, integration and testing, project management, risk analysis, case study of ethical considerations in Software Engineering.",None,None
COMP SCI 7022,Computer Vision,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",Level I Mathematics,None
COMP SCI 7023,Software Process Improvement,"The course introduces students to elements of the Software Engineering Institute's Personal Software Process, PSP. The PSP is introduced in increasing levels of sophistication with the essential elements illustrated by programming assignments and report writing.",None,COMP SCI 7007
COMP SCI 7026,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7026NA,Computer Architecture,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",None,None
COMP SCI 7027,Computational Cognitive Science,"This course provides an introduction to computational theories of human cognition. We use formal models from artificial intelligence and mathematical psychology to consider fundamental issues in human knowledge representation, inductive reasoning, learning, decision-making and language acquisition. What kind of informational structures describe the organisation of human knowledge, and what kinds of inferences do they license? How do humans make choices given time constraints, computational limitations, and external costs imposed by the world? What kinds of innate knowledge (if any) must people have? And how can formal models of human cognition inform our understanding of the design of intelligent machines? Representative modelling techniques include stochastic processes, Bayesian models, formal grammars, and random graph models.",Basic probability as taught in MATHS 2103 & some familiarity with programming in MATLAB,None
COMP SCI 7031,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7031NA,Advanced Programming Paradigms,"A selection of topics from the following: Fundamental models of computation, illustrated by the lambda calculus.  Different approaches to programming: functional and logic paradigms.  Fundamental concepts of programming languages, including abstraction, binding, parameter passing, scope, control abstractions.  Programming models expressed via Scheme: substitution model; map/reduce programming; environment model; object oriented model; a compositional programming model.  Introduction to parallel computing: data parallelism, Java threads, and relationship to distributed computing.  Examples in application: map/reduce programming in Google and with Hadoop; flow-oriented programming for composition of web-services. Cloud computing platforms and programming models",None,None
COMP SCI 7036,Software Engineering in Industry,"This course will involve lectures and research into advanced topics concerning current software engineering methodologies and techniques.  The course will include lectures on the advanced topics in software engineering and  guest lectures by software engineering practitioners from local industry on how software engineering methodologies are implemented. Lectures will be accompanied by site visits where students will gain a better understanding of the sort of products produced and the challenges involved in producing these products. There will also be an opportunity to talk with members of actual development teams who are responsible for particular software engineering related roles. Students will be guided to conduct preliminary research on selected topics relevant to software engineering industry practice. Students will be asked to produce two research  reports which present their understanding, findings, and critical assessment of software engineering practices in industry.",None,None
COMP SCI 7039,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7039NA,Computer Networks & Applications,"Introduction to networks and digital communications with a focus on Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7044,Computer System Security,"The course introduces topics in computer and network security research, with 
focus on current research. Topics covered include security models and 
policies; Operating Systems security: authentication and authorisation; 
Application security and malware; Applied cryptography and cryptanalysis; 
Network security: challenges, attacks and defences; Web and cloud security; 
Trusted computing.","Computer Architecture, Operating Systems and Computer Networks are assumed.  Additionally, some basic understanding of parsing and parsers and Computer Systems is an advantage.  No detailed knowledge of advanced cryptographic systems is required.",None
COMP SCI 7059,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7059NA,Artificial Intelligence,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,None,None
COMP SCI 7064,Operating Systems,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Protection mechanisms: protection domains, access lists, capability systems, principle of minimum privilege.","COMP SCI 7081, exposure to C programming as in COMP SCI 7088 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.","COMP SCI 7006, COMP SCI 7081 & one of COMP SCI 7082 or COMP SCI 7201",None
COMP SCI 7076NA,Distributed Systems,"A selection of topics from the following: the challenges faced in constructing client/server software: partial system failures, multiple address spaces, absence of a single clock, latency of communication, heterogeneity, absence of a trusted operating system, system management, binding and naming. Techniques for meeting these challenges: RPC and middleware, naming and directory services, distributed transaction processing, 'thin' clients, data replication, cryptographic security, mobile code. Introduction to Java RMI or CORBA.",None,None
COMP SCI 7077,Solving Engineering Models,"This course concerns techniques for the modelling and simulation of complex systems using a variety of methods and software tools. Students are introduced to the package Matlab and are taken through a study of the techniques used in  sophisticated modelling packages to solve common engineering problems.
The Matlab programming language is used extensively and students learn to program their own solutions for these common engineering problems. In addition to studying the equations for these models and their solutions, students study the stability, accuracy and reliability of the solution methods.",basic level of proficiency in some programming language & engineering mathematics,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",Mathematics as taught in MATHS 1012 or MATHS 1008,None
COMP SCI 7081NA,Computer Systems,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers, requirements for supporting an operating system and device drivers.",None,None
COMP SCI 7082NA,Data Structures & Algorithms,"Program development techniques including basic ideas of correctness; and proof; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Notions of complexity and analysis; Choosing data structures..",None,None
COMP SCI 7084,Introduction to Software Engineering,"Design: software design, UML notation, static models - identifying classes and associations; dynamic models - identifying states, events, transitions, use cases, mapping designs into code. Specification: the scope, role and styles of software specification. Testing: modes of testing, organising test suites. Human issues: managing object-oriented projects, ethics, professional practice.","COMP SCI 7082 or COMP SCI 7201, Mathematics as taught in MATHS 1012 or MATHS 1000A/B or MATHS 1008",None
COMP SCI 7088,Systems Programming,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threards and concurrency. Timers and their uses.",COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",COMP SCI 7084 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7089NA,Event Driven Computing,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets and concurrency. Concepts of state-space and relationship to testing. Building Graphical User Interfaces: model-view-controller paradigm. Building GUIs with the Java Swing library. Ease of use and human-computer interaction. Practical projects cover the use of FSAs for control logic and GUI design. Introduction to design patterns for managing complexity in large systems",None,None
COMP SCI 7090,Computer Graphics,"Selected topics from: Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders.  Animation and particles. Level of detail, scene graphs and implementation efficiency.",MATHS 1012 & COMP SCI 7088,None
COMP SCI 7091,Commercialising IT Research,"This course covers the process of transforming IT research into commercial products for the marketplace. Topics include: Protection of intellectual property (IP) - patents, trade secrets, copyrights. Creation of business plans for IT companies and products. Choosing a company structure, starting up, and avoiding early pitfalls. Understanding business ethics. Building out a management team and board. Raising capital - angel investors, venture capital, debt financing. Marketing - branding, positioning, media outlets, analysts. Sales -  IP licensing, support infrastructure, joint ventures, partnerships. Differences between US and Australian commercialisation environments.",None,None
COMP SCI 7093,Evolutionary Computation,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",COMP SCI 7059 & one of COMP SCI 7082 or COMP SCI 7201,None
COMP SCI 7094,Distributed Databases & Data Mining,"Topics covered in this course include: Distributed database system architecture, Distributed database system design, Distributed query processing and optimisation, Distributed transaction management, Data warehousing and OLAP technology, Association analysis, Classification and prediction, Cluster analysis, Mining complex types of data.",knowledge of database systems as taught in COMP SCI 7083,None
COMP SCI 7095A,Master Computer Science Research Project - Part A,"A student undertaking the project component of M. Comp.Sc. will enrol  in project courses worth 15 units over 2 consecutive semesters.  Students should enrol in Part A in the semester in which their project begins. The project will consist of an investigation in an area of computer science. Projects are supervised by one or more members of academic staff, sometimes in association with one of the  School's research groups.",None,COMP SCI 7007
COMP SCI 7095A,Master Computer Science Research Project - Part A,"A student undertaking the project component of M. Comp.Sc. will enrol  in project courses worth 15 units over 2 consecutive semesters.  Students should enrol in Part A in the semester in which their project begins. The project will consist of an investigation in an area of computer science. Projects are supervised by one or more members of academic staff, sometimes in association with one of the  School's research groups.",None,COMP SCI 7007
COMP SCI 7095B,Master Computer Science Research Project - Part B,"A student undertaking the project component of M. Comp.Sc. will enrol  in project courses worth 15 units over 2 consecutive semesters. Students should enrol in Part B in the semester following completion of Part A.  Note that a result of Credit or higher for Part A is a pre-requisite to continuing on to Part B.  The project will consist of an investigation in an area  of computer science. Projects are supervised by one or more members of academic staff, sometimes in association with one of the  School's research groups.",None,COMP SCI 7007;  COMP SCI 7095A with a grade of Credit or higher in previous semester
COMP SCI 7095B,Master Computer Science Research Project - Part B,"A student undertaking the project component of M. Comp.Sc. will enrol  in project courses worth 15 units over 2 consecutive semesters. Students should enrol in Part B in the semester following completion of Part A.  Note that a result of Credit or higher for Part A is a pre-requisite to continuing on to Part B.  The project will consist of an investigation in an area  of computer science. Projects are supervised by one or more members of academic staff, sometimes in association with one of the  School's research groups.",None,COMP SCI 7007;  COMP SCI 7095A with a grade of Credit or higher in previous semester
COMP SCI 7096A,Master of Software Engineering Project Part A,A student undertaking the project component of M. SoftEng will enrol  in this project  in semester 1. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015"
COMP SCI 7096B,Master of Software Engineering Project Part B,A student undertaking the project component of M. SoftEng will enrol  in this project course in semester 2. This is a  major software project as approved by the Head of School. The number  of units reflects the scope of the project. It is undertaken as a  group project. The project will be assessed as a single entity - the  student receiving this mark for all the project courses in which they  enrolled.,None,"COMP SCI 7007, COMP SCI 7015; Must enrol in COMP SCI 7096A with a grade of Credit or higher in previous semester"
COMP SCI 7098,Master of Computing & Innovation Project,"This course offers an introduction to the development and management of large software projects. Topics covered in this course include the application of: software specification, risk analysis, project management, quality assurance and the study of ethical considerations.",None,None
COMP SCI 7201,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",COMP SCI 7202,COMP SCI 7080 or COMP SCI 7202
COMP SCI 7201NA,Algorithm & Data Structure Analysis,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202,Foundations of Computer Science,"Introduces the fundamental concepts of object oriented programming. Topics include: Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O. 
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202ANA,Foundations of Computer Science A,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7202BNA,Foundations of Computer Science B,"Introduces the fundamental concepts of object oriented programming. Topics include:

Fundamental constructs - data types, arrays, strings and string processing, files, variables, expressions, conditionals, iteration, simple I/O.
Object oriented fundamentals - methods, classes, interfaces, inheritance
Algorithms and problem solving - problem solving process and strategies, simple searching and Sorting algorithms (linear and binary search, selection and insertion sort)
Software development tools and techniques - testing: black box, requirements, unit
Machine level representation - bits, bytes, words, number bases, representation of data, memory management.",None,None
COMP SCI 7301,Advanced Algorithms,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matchings, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",None,None
COMP SCI 7401,Introduction to Statistical Machine Learning,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",Basic probability theory and linear algebra,COMP SCI 7201
COMP SCI 7402,Introduction to Geometric Algorithms,Introduction to Computational Geometry techniques. Topics include theoretical and applied aspects of computational geometry,Discrete mathematics such as in MATHS 1008,COMP SCI 7201
COMP SCI 7403,Mining Big Data,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",None,COMP SCI 7201
